[{"C:\\webdev\\cma4\\pages\\About\\index.tsx":"1","C:\\webdev\\cma4\\pages\\api\\Google.tsx":"2","C:\\webdev\\cma4\\pages\\api\\hello.ts":"3","C:\\webdev\\cma4\\pages\\index.tsx":"4","C:\\webdev\\cma4\\pages\\_app.tsx":"5","C:\\webdev\\cma4\\pages\\_document.tsx":"6","C:\\webdev\\cma4\\src\\components\\About\\Landing\\AboutLanding.tsx":"7","C:\\webdev\\cma4\\src\\components\\About\\MailingList\\MailchimpContainer.tsx":"8","C:\\webdev\\cma4\\src\\components\\About\\MailingList\\MailingList.tsx":"9","C:\\webdev\\cma4\\src\\components\\About\\Services\\ServiceCard\\ServiceCard.tsx":"10","C:\\webdev\\cma4\\src\\components\\About\\Services\\ServiceCard\\ServiceCardList.tsx":"11","C:\\webdev\\cma4\\src\\components\\About\\Services\\Services.tsx":"12","C:\\webdev\\cma4\\src\\components\\features\\Calendar\\CmaCalendar.tsx":"13","C:\\webdev\\cma4\\src\\components\\features\\Calendar\\EventCards\\EventCard.tsx":"14","C:\\webdev\\cma4\\src\\components\\features\\Calendar\\EventCards\\EventCardList.tsx":"15","C:\\webdev\\cma4\\src\\components\\features\\Carousel\\Carousel.tsx":"16","C:\\webdev\\cma4\\src\\components\\features\\Map\\Map.tsx":"17","C:\\webdev\\cma4\\src\\components\\Home\\Banner\\Banner.tsx":"18","C:\\webdev\\cma4\\src\\components\\Home\\Landing\\Desktop\\DesktopHomeLanding.tsx":"19","C:\\webdev\\cma4\\src\\components\\Home\\Landing\\HomeLanding.tsx":"20","C:\\webdev\\cma4\\src\\components\\Home\\Landing\\Mobile\\MobileHomeLanding.tsx":"21","C:\\webdev\\cma4\\src\\components\\navigation\\Footer\\Footer.tsx":"22","C:\\webdev\\cma4\\src\\components\\navigation\\Layout\\Layout.tsx":"23","C:\\webdev\\cma4\\src\\components\\navigation\\Navbar\\MobileNav\\MobileNav.tsx":"24","C:\\webdev\\cma4\\src\\components\\navigation\\Navbar\\NavigationBar.tsx":"25"},{"size":407,"mtime":1649814257833,"results":"26","hashOfConfig":"27"},{"size":815,"mtime":1649645672893,"results":"28","hashOfConfig":"27"},{"size":307,"mtime":1645833174336,"results":"29","hashOfConfig":"27"},{"size":1620,"mtime":1650165805526,"results":"30","hashOfConfig":"27"},{"size":291,"mtime":1646354007054,"results":"31","hashOfConfig":"27"},{"size":529,"mtime":1649811705850,"results":"32","hashOfConfig":"27"},{"size":1769,"mtime":1650251887242,"results":"33","hashOfConfig":"27"},{"size":546,"mtime":1649816773734,"results":"34","hashOfConfig":"27"},{"size":1948,"mtime":1649987471669,"results":"35","hashOfConfig":"27"},{"size":981,"mtime":1650152583598,"results":"36","hashOfConfig":"27"},{"size":2719,"mtime":1650155436431,"results":"37","hashOfConfig":"27"},{"size":783,"mtime":1649731006425,"results":"38","hashOfConfig":"27"},{"size":4468,"mtime":1650422812857,"results":"39","hashOfConfig":"27"},{"size":822,"mtime":1650420918051,"results":"40","hashOfConfig":"27"},{"size":680,"mtime":1650327418923,"results":"41","hashOfConfig":"27"},{"size":2379,"mtime":1650248889936,"results":"42","hashOfConfig":"27"},{"size":1046,"mtime":1649037027631,"results":"43","hashOfConfig":"27"},{"size":451,"mtime":1649811838847,"results":"44","hashOfConfig":"27"},{"size":1410,"mtime":1649642723268,"results":"45","hashOfConfig":"27"},{"size":349,"mtime":1649037007141,"results":"46","hashOfConfig":"27"},{"size":803,"mtime":1650150552783,"results":"47","hashOfConfig":"27"},{"size":4044,"mtime":1649639342025,"results":"48","hashOfConfig":"27"},{"size":441,"mtime":1646345461996,"results":"49","hashOfConfig":"27"},{"size":2105,"mtime":1650250265486,"results":"50","hashOfConfig":"27"},{"size":1265,"mtime":1650423596747,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b7if85",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\webdev\\cma4\\pages\\About\\index.tsx",[],[],"C:\\webdev\\cma4\\pages\\api\\Google.tsx",[],[],"C:\\webdev\\cma4\\pages\\api\\hello.ts",[],[],"C:\\webdev\\cma4\\pages\\index.tsx",[],[],"C:\\webdev\\cma4\\pages\\_app.tsx",[],[],"C:\\webdev\\cma4\\pages\\_document.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\About\\Landing\\AboutLanding.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\About\\MailingList\\MailchimpContainer.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\About\\MailingList\\MailingList.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\About\\Services\\ServiceCard\\ServiceCard.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\About\\Services\\ServiceCard\\ServiceCardList.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\About\\Services\\Services.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\features\\Calendar\\CmaCalendar.tsx",["128"],[],"import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport * as dateFns from \"date-fns\";\r\nimport { Button, CircularProgress } from \"@mui/material\";\r\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\r\nimport { el } from \"date-fns/locale\";\r\nimport moment from \"moment\";\r\nimport { EventCardList } from \"./EventCards/EventCardList\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst CALENDAR_ID = \"hvjsr15398ntm7cgqq6vp5hg5s@group.calendar.google.com\";\r\nconst API_KEY = \"AIzaSyDIrLYRk8P6upEoBmoF6BG3PGKAi1pDdqo\";\r\nconst SCOPE = \"https://www.googleapis.com/auth/calendar.events.readonly\";\r\nconst url = `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events?key=${API_KEY}`;\r\n\r\nclass calEvent {\r\n  constructor(start: Date, end: Date, summary: string, description: string) {}\r\n}\r\nconst dummydata: any[] = [];\r\n\r\nexport default function CmaCalendar() {\r\n  const [events, setEvents] = useState(dummydata);\r\n  const [isLoadingEvents, setIsLoadingEvents] = useState(true);\r\n  const [gymClass, setGymClass] = useState(dummydata);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [month, setMonth] = useState(dateFns.format(new Date(), \"LLLL\"));\r\n  const weekdays = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\r\n\r\n  const getEvents = () => {\r\n    const calEvents: any[] = [];\r\n    fetch(url)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        setIsLoadingEvents(false);\r\n        res.items.map((item: any) => {\r\n          events.push(item);\r\n        });\r\n        setEvents(calEvents);\r\n        getDailyClasses();\r\n      });\r\n  };\r\n\r\n  const getDailyClasses = () => {\r\n    const dailyClasses = events.filter(\r\n      (day) =>\r\n        moment(day.start.dateTime).format(\"MM-DD-YYYY\") ===\r\n        moment(selectedDate).format(\"MM-DD-YYYY\")\r\n    );\r\n    setGymClass(dailyClasses);\r\n  };\r\n\r\n  const currentDateSetter = (day: React.MouseEvent<HTMLButtonElement>) => {\r\n    setSelectedDate(new Date(day.currentTarget.value));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEvents();\r\n  }, [selectedDate]);\r\n\r\n  function renderDates() {\r\n    // returns month start date of current date\r\n    const monthStart = dateFns.startOfMonth(new Date());\r\n    //returns month end date of current date\r\n    const monthEnd = dateFns.endOfMonth(monthStart);\r\n    //returns week start date of current date ~ a sunday\r\n    const startDate = dateFns.startOfWeek(monthStart);\r\n    //returns week end date of current date ~ a saturday\r\n    const endDate = dateFns.endOfWeek(monthEnd);\r\n    const dateFormat = \"d\";\r\n\r\n    const rows = [];\r\n    let days = [];\r\n    let day = startDate; //first sunday\r\n    let formattedDate = \"\";\r\n    let current: Date;\r\n\r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n        formattedDate = dateFns.format(day, dateFormat);\r\n        current = day;\r\n        days.push(\r\n          <div className=\"cell\" key={days.length}>\r\n            <button\r\n              className={`cell blk-bg ${\r\n                !dateFns.isSameMonth(day, monthStart)\r\n                  ? \"disabled\"\r\n                  : dateFns.isSameDay(day, selectedDate)\r\n                  ? \"selected\"\r\n                  : \"\"\r\n              }`}\r\n              value={current.toDateString()}\r\n              onClick={(e) => currentDateSetter(e)}\r\n            >\r\n              {formattedDate}\r\n            </button>\r\n          </div>\r\n        );\r\n        day = dateFns.addDays(day, 1);\r\n      }\r\n      rows.push(\r\n        <div className=\"row\" key={rows.length}>\r\n          {days}\r\n        </div>\r\n      );\r\n      days = [];\r\n    }\r\n    return <div className=\"dates\">{rows}</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"calendar-wrapper\">\r\n        <div className=\"cma-calendar-box blk-bg\">\r\n          <div className=\"calendar\">\r\n            <div className=\"month\">\r\n              <h1>{month}</h1>\r\n            </div>\r\n            <div className=\"weekdays\">\r\n              {weekdays.map((day, index) => (\r\n                <div className=\"weekday cell\" key={index}>\r\n                  {day}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {renderDates()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"cma-event-cards\">\r\n          {isLoadingEvents && gymClass ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <EventCardList eventList={gymClass} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\webdev\\cma4\\src\\components\\features\\Calendar\\EventCards\\EventCard.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\features\\Calendar\\EventCards\\EventCardList.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\features\\Carousel\\Carousel.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\features\\Map\\Map.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\Home\\Banner\\Banner.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\Home\\Landing\\Desktop\\DesktopHomeLanding.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\Home\\Landing\\HomeLanding.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\Home\\Landing\\Mobile\\MobileHomeLanding.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\navigation\\Footer\\Footer.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\navigation\\Layout\\Layout.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\navigation\\Navbar\\MobileNav\\MobileNav.tsx",[],[],"C:\\webdev\\cma4\\src\\components\\navigation\\Navbar\\NavigationBar.tsx",[],[],{"ruleId":"129","severity":1,"message":"130","line":61,"column":6,"nodeType":"131","endLine":61,"endColumn":20,"suggestions":"132"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.","ArrayExpression",["133"],{"desc":"134","fix":"135"},"Update the dependencies array to be: [getEvents, selectedDate]",{"range":"136","text":"137"},[2087,2101],"[getEvents, selectedDate]"]